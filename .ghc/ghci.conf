:set prompt "\n\ESC[1;35m\x03BB> \ESC[m"
:set prompt2 "\ESC[1;35m > \ESC[m"

:def hlint const . return $ ":! hlint \"src\""
:def hoogle \s -> return $ ":! hoogle --count=15 \"" ++ s ++ "\""

:set -XDeriveDataTypeable
:set -XDeriveFoldable
:set -XDeriveFunctor
:set -XDeriveGeneric
:set -XDeriveLift
:set -XDeriveTraversable

:set -XNoImplicitPrelude
:set -XLambdaCase
:set -XInstanceSigs
:set -XMultiWayIf
:set -XGeneralizedNewtypeDeriving
:set -XOverloadedStrings
:set -XRecordWildCards
:set -XScopedTypeVariables
:set -XPackageImports
:set -XTypeApplications
:set -XTypeOperators

-- Show the types of evaluated expressions
:set +t

-- Enable multi-line expressions with :{ and :}
:set +m

:add ~/.ghc/imports.hs

import IPPrint.Colored
:set -interactive-print=IPPrint.Colored.cpprint
:def cp (\_ -> return ":set -interactive-print=IPPrint.Colored.cpprint")
:def ncp (\_ -> return ":set -interactive-print=print")
