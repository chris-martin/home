("~/haskell/bricks/" "~/haskell/bananas-paper/" "~/nix/" "~/haskell/chris-martin.org/" "~/haskell/either-list-functions/" "~/" "~/haskell/multi-instance/" "~/haskell/choose/" "~/euler/" "~/haskell/haskell-aligned/" "~/haskell/loc/" "~/haskell/rory/" "~/haskell/fizzbuzz-as-a-service/" "~/haskell/clock-app/" "~/haskell/equivalent-list/" "~/haskell/bad-twenty-four/" "~/haskell/num-qq/" "~/haskell/data-forest/" "~/haskell/human/" "~/haskell/lib/" "~/haskell/elephant/" "~/haskell/wordlist/" "~/haskell/rain-water/" "~/haskell/multi-monoid/" "~/haskell/multi-param-monoid/" "~/joyofhaskell/book/" "~/haskell/template/" "~/haskell/gulcii/" "~/haskell/styx/" "~/haskell/repl-check/" "~/haskell/parsec/" "~/haskell/ghc/" "~/haskell/package-imports-example/" "~/haskell/wingfield/" "~/haskell/lens/" "~/haskell/var-monad/" "~/haskell/sandbox/" "~/haskell/markdown/" "~/haskell/hsass/" "~/joyofhaskell/haskell-report-archive/" "~/joyofhaskell/haskell-report/" "~/code/slacklatex/" "~/joyofhaskell/joyofhaskell.com/" "~/haskell/backpack-regex-example/" "~/trireme/" "~/haskell/intellij-haskell-exe-name-example/" "~/haskell/pam/" "~/haskell/http-client/" "~/haskell/wreq/" "~/haskell/nix-cli-wrapper/" "~/haskell/mono-traversable/" "~/haskell/gtk2hs/" "~/haskell/graphviz/" "~/haskell/stack/" "~/haskell/xmonad/" "~/haskell/dhall/" "/tmp/t/")