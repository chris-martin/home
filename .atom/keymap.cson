# This file is a dict where the keys are CSS selectors. All of the keys have to
# be different, or else the CSON parser will silently ignore duplicates.
# Therefore we pad each selector with a dummy entry (starting with __) to make
# sure no two selectors are the same.

# Make cursor movement respect camelCase.
'atom-workspace atom-text-editor, __camel-case-movement':

    'ctrl-backspace':   'editor:delete-to-beginning-of-subword'
    'ctrl-delete':      'editor:delete-to-end-of-subword'

    'ctrl-left':        'editor:move-to-previous-subword-boundary'
    'ctrl-right':       'editor:move-to-next-subword-boundary'

    'ctrl-shift-left':  'editor:select-to-previous-subword-boundary'
    'ctrl-shift-right': 'editor:select-to-next-subword-boundary'

# Same as the default emacs shortcut for fill-paragraph.
'atom-workspace atom-text-editor, __fill-paragraph':

    'alt-q': 'hard-wrap:reflow-selection'

# Switch between tabs like in IntelliJ. The 'atom-text-editor' selector works
# for most tabs, but the additonal '.pane-item' selector is required to get this
# working for search-results tabs as well.
'atom-workspace atom-text-editor, atom-workspace .pane-item, __switch-tabs':

    'alt-right': 'pane:show-next-item'
    'alt-left':  'pane:show-previous-item'

# Line deletion.
'atom-workspace atom-text-editor, __delete-line':

    'ctrl-y': 'editor:delete-line'

# A couple familiar ways to close a tab.
'body, __close-tab':

    'ctrl-f4': 'core:close'
    'ctrl-w':  'core:close'

# The usual undo and redo.
'body, __undo-redo':

    'ctl-z':       'core:undo'
    'ctl-shift-z': 'core:redo'

# Project-wide wearch like IntelliJ.
'atom-workspace, __project-search':

    'ctrl-shift-f': 'project-find:show'
    'ctrl-shift-r': 'project-find:show'

    'ctrl-shift-n': 'fuzzy-finder:toggle-file-finder'

# Scroll up and down with the keyboard, without moving the caret.
'atom-workspace atom-text-editor:not(.mini), __scroll-without-moving':

    'ctrl-down': 'editor:scroll-down'
    'ctrl-up':   'editor:scroll-up'

# Move the lines under the caret up/down. Problem with this feature: It triggers
# auto-indentation and therefore tends to mangle things as it moves
# (https://github.com/atom/atom/issues/10524).
'atom-workspace atom-text-editor:not([mini]), __move-lines':

    'ctrl-shift-up':   'editor:move-line-up'
    'ctrl-shift-down': 'editor:move-line-down'

# Comment/uncomment the lines under the caret. Ideally this would also move the
# cursor down if exactly one line was affected, to let you easily comment
# multiple lines without selecting them first, but it doesn't.
'atom-workspace atom-text-editor:not([mini]), __comment-lines':

    'ctrl-/': 'editor:toggle-line-comments'


#-------------------------------------------------------------------------------
#  Unsorted things
#-------------------------------------------------------------------------------

'atom-workspace atom-text-editor, __d-unset-1':
  'ctrl-alt-d': 'unset!'
  'ctrl-shift-d': 'unset!'

'atom-workspace atom-text-editor, atom-workspace, __diff-file':
  'ctrl-d': 'git-difftool:diff-file'

'.platform-linux atom-text-editor, __d-unset-2':
  'ctrl-d': 'unset!'

'atom-workspace, __nav-things':
  'ctrl-shift-a': 'command-palette:toggle'  # Find action
  'ctrl-1': 'tree-view:toggle'              # Open corresponding tool window
  'ctrl-2': 'ide-haskell:toggle-output'

'atom-workspace atom-text-editor:not([mini]), _____________':
  'ctrl-e':          'fuzzy-finder:toggle-buffer-finder'
  'ctrl-j':          'snippets:available'
